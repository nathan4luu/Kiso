// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String  @id @default(cuid())
  name         String
  email        String  @unique
  profilePhoto String?

  createdAt DateTime @default(now())
  lastLogIn DateTime @default(now())

  decks         Deck[]
  favoriteDecks FavoriteDeck[]
}

model Deck {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  title       String
  description String?

  createdAt DateTime @default(now())
  editedAt  DateTime @updatedAt

  cards        Card[]
  FavoriteDeck FavoriteDeck[]
}

model Card {
  id     String @id @default(cuid())
  deck   Deck   @relation(fields: [deckId], references: [id], onDelete: Cascade)
  deckId String

  term       String
  definition String

  createdAt DateTime @default(now())
  editedAt  DateTime @updatedAt
}

model FavoriteDeck {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  deck   Deck   @relation(fields: [deckId], references: [id])
  deckId String

  favoritedAt DateTime @default(now())
}
